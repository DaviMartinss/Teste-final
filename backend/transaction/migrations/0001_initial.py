# Generated by Django 5.1.5 on 2025-02-24 19:51

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('number', models.CharField(max_length=12, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(12)], verbose_name='wallet number')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='wallet balance')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='transaction amount')),
                ('status', models.CharField(choices=[('001', 'Pending'), ('002', 'Authorized'), ('003', 'Settled'), ('004', 'Failure')], default='001', max_length=3, verbose_name='transaction status')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='who realized')),
                ('from_wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_transactions', to='transaction.wallet', verbose_name='origin wallet')),
                ('to_wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_transactions', to='transaction.wallet', verbose_name='destination wallet')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('status__in', ['001', '002', '003', '004'])), name='transaction_transaction_status_valid')],
            },
        ),
    ]
